@using Core.Models;
@model EducationMaterial

@{
    string url = (string)TempData["UploadResult"]!;
    var fileExtension = Model.FileExtension.ToLower();
    var supportedImageExtensions = new[] { ".jpg", ".jpeg", ".png", ".gif", ".bmp", ".heic" };
    var supportedVideoExtensions = new[] { ".mp4", ".avi", ".mkv", ".mov", "." };
    var supportedPdfExtensions = new[] { ".pdf" };
    var supportedWordExtensions = new[] { ".doc", ".docx" };
}

<!DOCTYPE html>
<html>
<body>
<h3>File Details: @Model.Name</h3>

@if (supportedImageExtensions.Contains(fileExtension))
{
    <img src="@url" alt="Image" style="max-width: 100%;">
}
else if (supportedVideoExtensions.Contains(fileExtension))
{
    <video controls style="max-width: 100%;">
        <source src="@url" type="video/mp4">
        Your browser does not support the video tag.
    </video>
}
else if (supportedPdfExtensions.Contains(fileExtension))
{
    <div id="pdf-container">
        <embed src="@url" type="application/pdf" width="100%" height="600px"/>
        <script>
          var pdfUrl = "@url";
          var container = document.getElementById("pdf-container");
          PDFObject.embed(pdfUrl, container);
        </script>
    </div>
}
else if (supportedWordExtensions.Contains(fileExtension))
{
    <iframe src="https://view.officeapps.live.com/op/view.aspx?src=@url" style="width: 100%; height: 600px;"></iframe>
}
else
{
    <p>Unsupported file format: @fileExtension</p>
}

<div class="mt-3">
    <!-- Add a button to download the file. Then change with a path to Download method -->
    <a href="@url" class="btn btn-primary" download>Download</a>
    <a type="button" class="btn btn-outline-danger" asp-controller="EducationMaterial" asp-action="Delete" asp-route-id="@Model.Id">Delete material</a>
</div>
</body>
</html>

<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfobject/2.2.7/pdfobject.min.js"></script>

