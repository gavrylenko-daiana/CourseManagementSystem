@using Core.Enums
@model UI.ViewModels.CourseViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Course Details</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.css">
    <style>
        body {
            background-color: #f7f7f7;
        }
            
        .cover-card:hover {
            cursor: pointer;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
            border: #4682B4 1px solid;
        }

        .user-list {
            list-style-type: none !important;
            padding: 0;
        }
        
        .user-item {
            border: 1px solid #ccc;
            margin-bottom: 10px;
            padding: 10px;
        }
        
        .user-profile {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .user-details {
            display: flex;
            flex-direction: column;
            margin-right: 10px;
        }
        
        .ui.teal.basic.button {
            margin-left: auto;
        }
    </style>
</head>
<body>
    <div class="ui container mt-4">
        <div class="ui centered raised card" style="width: 90%;">
            <div class="content">
                <div class="header">
                    Course Details
                </div>
            </div>
            <div class="content">
                <h4 class="ui header">@Model.Name</h4>
    
                @if (Model.CurrentUser.Role != AppUserRoles.Student)
                {
                    <a href="@Url.Action("Create", "Group", new { courseId = Model.Id })" class="ui primary basic button mb-3">Create Group</a>
                }
    
                @if (Model.CurrentGroups != null && Model.CurrentGroups.Count > 0)
                {
                    <h5 class="ui header">Groups:</h5>
                    <div class="ui two stackable cards">
                        @foreach (var group in Model.CurrentGroups)
                        {
                            <div class="ui card cover-card">
                                <div class="content">
                                    <div class="header">@group.Name</div>
                                </div>
                                <div class="extra content ui center aligned">
                                    <a href="@Url.Action("Details", "Group", new { id = group.Id })" class="ui details-button button">Details</a>
                                    @if (Model.CurrentUser.Role != AppUserRoles.Student)
                                    {
                                        <div class="ui buttons">
                                            <a href="@Url.Action("Edit", "Group", new { id = group.Id })" class="ui edit-button button">Edit</a>
                                            <div class="or"></div>
                                            <a href="@Url.Action("Delete", "Group", new { id = group.Id })" class="ui delete-button button">Delete</a>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="ui warning message">
                        <p>No groups found for this course.</p>
                    </div>
                }
  
                @{
                var materialsGroup = Model.EducationMaterials.Where(m => m.MaterialAccess is MaterialAccess.Course or MaterialAccess.General).ToList();
                }
                @if (materialsGroup != null && materialsGroup.Any())
                {
                    <div class="ui segment">
                        <h4 class="ui header">Education Materials:</h4>
                        <ul class="ui list">
                            @foreach (var material in materialsGroup)
                            {
                              <li>@material.Name</li>
                              <a class="btn btn-outline-danger btn-sm" asp-controller="EducationMaterial" asp-action="Detail" asp-route-id="@material.Id">Detail</a>
                            }
                        </ul>
                    </div>
                }
                else
                {
                    <div class="ui warning message">
                        <p>No education materials found for this course.</p>
                    </div>
                }
                
                @if (Model.CurrentUser.Role == AppUserRoles.Admin)
                {
                    <a href="@Url.Action("SelectTeachers", "Course", new { courseId = Model.Id })" class="ui black basic button">Add teachers</a>
                }
                
                @if (Model.UserCourses != null && Model.UserCourses.Count > 0)
                {
                    <div class="ui segment">
                        <h4 class="ui header">Users:</h4>
                        <ul class="ui user-list">
                            @foreach (var userCourse in Model.UserCourses)
                            {
                                <li class="user-item">
                                    <div class="user-profile">
                                        <div class="user-details">
                                            <span>@userCourse.AppUser.FirstName @userCourse.AppUser.LastName</span>
                                            <span>@userCourse.AppUser.Role</span>
                                        </div>
                                        <a href="@Url.Action("Detail", "User", new { id = userCourse.AppUser.Id })" class="ui teal basic button">View Profile</a>
                                    </div>
                                </li>
                            }
                        </ul>
                    </div>
                }
                else
                {
                    <div class="ui warning message">
                        <p>No user courses found for this course.</p>
                    </div>
                }
            </div>
        </div>
    </div>
</body>
</html>

<script>
    document.querySelectorAll('.ui.card').forEach(groupCard => {
        groupCard.addEventListener('click', function () {
            window.location.href = this.querySelector('.ui.details-button.button').href;
        });
    });
</script>