@model UI.ViewModels.GroupViewModel

<div class="container mt-4">
    <h3>Create Group</h3>
    <hr />
    @using (Html.BeginForm("Create", "Group", FormMethod.Post))
    {
        <div class="form-group">
            @Html.LabelFor(model => model.Name)
            @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate)
            @Html.TextBoxFor(model => model.StartDate, new { @class = "form-control", type = "date", min = DateTime.Now.ToString("yyyy-MM-dd"), required = "required" })
            @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.EndDate)
            @Html.TextBoxFor(model => model.EndDate, new { @class = "form-control", type = "date", min = DateTime.Now.ToString("yyyy-MM-dd"), required = "required" })
            @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
        </div>

        <button type="submit" class="btn btn-primary">Create</button>
        <a href="@Url.Action("Index")" class="btn btn-secondary">Cancel</a>
    }
    
    @if (TempData["Error"] != null)
    {
        <div class="col-md-12 alert alert-danger">
            <span><b>Sorry!</b> - @TempData["Error"]</span>
        </div>
    }    
</div>