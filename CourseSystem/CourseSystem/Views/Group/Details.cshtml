@using Core.Enums
@model UI.ViewModels.UserGroupViewModel

<style>
    .object-list li {
        margin-top: 10px;
    }
</style>

<div class="container mt-4">
    <div class="card mb-4">
        <div class="card-header">
            Group Details
        </div>
        <div class="card-body">
            <h5 class="card-title">@Model.Group.Name</h5>
            <p>
                <strong>Start Date:</strong> @Model.Group.StartDate.ToString("dd/MM/yyyy")
            </p>
            <p>
                <strong>End Date:</strong> @Model.Group.EndDate.ToString("dd/MM/yyyy")
            </p>
            <p><strong>Progress:</strong> @Model.Progress%</p>

            @if (Model.Group.EducationMaterials != null && Model.Group.EducationMaterials.Count > 0)
            {
                <h6>Education Materials:</h6>
                <ul>
                    @foreach (var material in Model.Group.EducationMaterials)
                    {
                        <li>@material.Name</li>
                        <a class="btn btn-outline-danger btn-sm" asp-controller="EducationMaterial" asp-action="Detail" asp-route-id="@material.Id">Detail</a>
                    }
                </ul>
            }
            else
            {
                <p>No education materials found for this group.</p>
            }

            @if (Model.CurrentUser.Role != AppUserRoles.Student)
            {
                <a href="@Url.Action("Edit", "Group", new { id = Model.Group.Id })" class="btn btn-outline-primary">Edit Group</a>
                <a href="@Url.Action("Delete", "Group", new { id = Model.Group.Id })" class="btn btn-outline-danger">Delete Group</a>
            }
        </div>
    </div>

    @if (Model.Group.Assignments != null && Model.Group.Assignments.Count > 0)
    {
        <div class="card mb-4">
            <div class="card-header">
                Assignments
            </div>
            <div class="card-body, object-list">
                <ul>
                    @foreach (var assignment in Model.Group.Assignments)
                    {
                        <li>@assignment.Name</li>
                    }
                </ul>
            </div>
        </div>
    }
    else
    {
        <div class="card mb-4">
            <div class="card-header">
                Assignments
            </div>
            <div class="card-body">
                <p>No assignments found for this group.</p>
            </div>
        </div>
    }
    <div class="card-footer">
        <a href="@Url.Action("Index", "Assignment", new { id = Model.Group.Id })" class="btn btn-primary">View Assignments</a>
    </div>

    @if (Model.Group.UserGroups != null && Model.Group.UserGroups.Count > 0)
    {
        <div class="card">
            <div class="card-header">
                Users
            </div>
            <div class="card-body, object-list">
                <ul>
                    @foreach (var userGroup in Model.Group.UserGroups.OrderBy(ug => ug.AppUser.Role))
                    {
                        <li>
                            @userGroup.AppUser.Role - @userGroup.AppUser.FirstName
                            <a href="@Url.Action("Detail", "User", new { id = userGroup.AppUser.Id })" class="btn btn-sm btn-outline-primary ml-2">View Profile</a>
                        </li>
                    }
                </ul>
            </div>
        </div>
    }
    else
    {
        <div class="card">
            <div class="card-header">
                Users
            </div>
            <div class="card-body">
                <p>No users found for this group.</p>
            </div>
        </div>
    }

    @if (Model.CurrentUser.Role != AppUserRoles.Student)
    {
        <div class="card-footer">
            <a href="@Url.Action("SelectStudent", "Group", new { id = Model.Group.Id })" class="btn btn-primary">Add student in group</a>
        </div>
        @if (Model.CurrentUser.Role == AppUserRoles.Admin)
        {
            <div class="card-footer">
                <a href="@Url.Action("SelectTeachers", "Group", new { courseId = Model.Group.CourseId, groupId = Model.Group.Id })" class="btn btn-primary">Add teacher in group</a>
            </div>
        }
    }
    <div class="py-2">
        <a class="nav-link text-dark btn btn-outline-primary" asp-controller="EducationMaterial" asp-action="Create" asp-route-groupId="@Model.Group.Id">Upload education material</a>
    </div>
</div>
@if (TempData["Error"] != null)
{
    <div class="col-md-12 alert alert-danger">
        <span><b>Sorry!</b> - @TempData["Error"]</span>
    </div>
}