@using Core.Enums
@model UI.ViewModels.UserGroupViewModel

<div class="container mt-4">
    <div class="card">
        <div class="card-header">
            Group Details
        </div>
        <div class="card-body">
            <h5 class="card-title">@Model.Group.Name</h5>
            <p><strong>Start Date:</strong> @Model.Group.StartDate.ToString("dd/MM/yyyy")</p>
            <p><strong>End Date:</strong> @Model.Group.EndDate.ToString("dd/MM/yyyy")</p>

            @if (Model.Group.EducationMaterials != null && Model.Group.EducationMaterials.Count > 0)
            {
                <h6>Education Materials:</h6>
                <ul>
                    @foreach (var material in Model.Group.EducationMaterials)
                    {
                        <li>@material.Name</li>
                    }
                </ul>
            }
            else
            {
                <p>No education materials found for this group.</p>
            }
            
            @if (Model.Group.Assignments != null && Model.Group.Assignments.Count > 0)
            {
                <h6>Assignments:</h6>
                <ul>
                    @foreach (var assignment in Model.Group.Assignments)
                    {
                        <li>@assignment.Name</li>
                    }
                </ul>
            }
            else
            {
                <p>No assignments found for this group.</p>
            }
            
            <a href="@Url.Action("Index", "Assignment", new { assignmentId = Model.Group.Id })" class="btn btn-primary">
                Assignments
            </a>

            @if (Model.Group.UserGroups != null && Model.Group.UserGroups.Count > 0)
            {
                <h6>Users:</h6>
                <ul>
                    @foreach (var userGroup in Model.Group.UserGroups)
                    {
                        <li>@userGroup.AppUser.FirstName</li>
                    }
                </ul>
            }
            else
            {
                <p>No users found for this group.</p>
            }
            <a href="@Url.Action("SelectStudent", "Group", new { id = Model.Group.Id })" class="btn btn-primary">Add student in group</a>
            
            <div class="btn-group" role="group">
                @if (Model.CurrentUser.Role != AppUserRoles.Student)
                {
                    <a href="@Url.Action("Edit", "Group", new { id = Model.Group.Id })" class="btn btn-outline-primary">Edit Group</a>
                    <a href="@Url.Action("Delete", "Group", new { id = Model.Group.Id })" class="btn btn-outline-danger">Delete Group</a>
                }
            </div>
        </div>
    </div>
</div>