@using Core.Enums
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using System.Text.Json
@using System.Text.Json.Serialization
@model UI.ViewModels.UserGroupViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Course Details</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.css">
    <style>
        body {
            background-color: #f7f7f7;
        }
            
        .cover-card:hover {
            cursor: pointer;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
            border: #4682B4 1px solid;
        }

        .user-list {
            list-style-type: none !important;
            padding: 0;
        }
        
        .user-item {
        display: flex;
                    flex-direction: column;
            border: 1px solid #ccc;
            margin-bottom: 10px;
            padding: 10px;
        }     
        
        .user-details {
            display: flex;
            flex-direction: column;
            margin-right: 10px;
        }
        
        .ui.teal.basic.button {
            margin-left: auto;
        }
        
        .left-container {
            float: left;
            width: 70%; 
            padding: 0 10px; 
        }
        
        .right-container {
            float: right;
            width: 30%; 
            padding: 0 10px; 
        }
        
        .view-profile-button {
            width: 100%;
            text-align: center;
            white-space: nowrap;
            margin-top: 10px;   
        }
        
        .user-button {
            margin-top: auto;
        }
    </style>
</head>
<body>
    <div class="ui container mt-4">
        <div class="ui centered raised card" style="width: 90%;">
            <div class="content">
                <div class="header">
                    Group Details
                </div>
            </div>
            <div class="content">
                <div class="left-container">
                    <h4 class="ui header">@Model.Group.Name</h4>
                    <p><strong>Start Date:</strong> @Model.Group.StartDate.ToString("dd/MM/yyyy")</p>
                    <p><strong>End Date:</strong> @Model.Group.EndDate.ToString("dd/MM/yyyy")</p>
                    <div><strong>Progress:</strong> 
                        @Model.Progress%
                        <progress class="ui progress" max="100" value="@Model.Progress"></progress>
                    </div>
        
                    @if (Model.CurrentUser.Role != AppUserRoles.Student)
                    {
                        <a href="@Url.Action("Edit", "Group", new { id = Model.Group.Id })" class="ui edit-button button">Edit Group</a>
                        <a href="@Url.Action("Delete", "Group", new { id = Model.Group.Id })" class="ui delete-button button">Delete Group</a>
                    }

                    @{
                        var materialsGroup = Model.Group.EducationMaterials.Where(m => m.MaterialAccess is MaterialAccess.Group or MaterialAccess.General).ToList();
                  
                        var serializedMaterials = JsonSerializer.Serialize(materialsGroup, new JsonSerializerOptions
                        {
                            ReferenceHandler = ReferenceHandler.Preserve
                        });                 
                    }
                    @if (Model.CurrentUser.Role != AppUserRoles.Student)
                    {
                        <a class="ui black basic button mb-3" asp-controller="EducationMaterial" asp-action="CreateInGroup" asp-route-groupId="@Model.Group.Id">Upload education material</a>
                    }                  
                    @if (materialsGroup != null && materialsGroup.Any())
                    {
                        <div class="ui segment">
                            <a class="ui black basic button" asp-controller="EducationMaterial" asp-action="IndexMaterials" asp-route-materials="@serializedMaterials">Education Materials</a>   
                          
                            <h4 class="ui header">Education Materials:</h4>
                            <ul class="ui list">
                                @foreach (var material in materialsGroup)
                                {
                                    <li>@material.Name</li>
                                    <a class="ui details-button button" asp-controller="EducationMaterial" asp-action="Detail" asp-route-id="@material.Id">Detail</a>
                                }
                            </ul>
                        </div>
                    }
                    else
                    {
                        <div class="ui warning message">
                            <p>No education materials found for this group.</p>
                        </div>
                    }

                    @if (Model.Group.Assignments != null && Model.Group.Assignments.Any())
                    {
                        <div class="ui segment">
                            <a href="@Url.Action("Index", "Assignment", new { groupId = Model.Group.Id })" class="ui black basic button">View Assignments</a>
                            <h4 class="ui header">Assignments:</h4>
                            <ul class="ui list">
                                @foreach (var assignment in Model.Group.Assignments)
                                {
                                    <li>@assignment.Name</li>
                                    <a class="ui details-button button" asp-controller="Assignment" asp-action="Details" asp-route-id="@assignment.Id">Detail</a>
                                }
                            </ul>
                        </div>
                    }
                    else
                    {
                        <div class="ui warning message">
                            <p>No assignment found for this group.</p>
                        </div>
                    }
                </div>
                
                <div class="right-container">
                    <div class="ui center aligned">
                        @if (Model.CurrentUser.Role != AppUserRoles.Student)
                        {
                            <a href="@Url.Action("SelectStudent", "Group", new { id = Model.Group.Id })" class="ui black basic button mb-3">Add student in group</a>
                            @if (Model.CurrentUser.Role == AppUserRoles.Admin)
                            {
                                <a href="@Url.Action("SelectTeachers", "Group", new { courseId = Model.Group.CourseId, groupId = Model.Group.Id })" class="ui black basic button">Add teacher in group</a>
                            }
                        }
                    </div>

                    @if (Model.UserGroupsWithoutAdmins != null && Model.UserGroupsWithoutAdmins.Any())
                    {
                        <h4 class="ui header">Users:</h4>
                        <ul class="ui user-list">
                            @foreach (var userGroupsWithoutAdmin in Model.UserGroupsWithoutAdmins)
                            {
                                <li class="user-item">
                                    <div class="user-profile">
                                        <div class="user-details">
                                            <span>@userGroupsWithoutAdmin.AppUser.FirstName @userGroupsWithoutAdmin.AppUser.LastName - @userGroupsWithoutAdmin.AppUser.Role</span>
                                        </div>
                                        <div class="user-button">
                                            <a href="@Url.Action("Detail", "User", new { id = userGroupsWithoutAdmin.AppUser.Id })" class="ui teal basic button view-profile-button">View Profile</a>
                                        </div>
                                    </div>
                                </li>
                            }
                        </ul>
                    }
                    else
                    {
                        <div class="ui warning message">
                            <p>No user courses found for this group.</p>
                        </div>
                    }
                </div>
            </div>
            @if (TempData["Error"] != null)
            {
                <div class="col-md-12 alert alert-danger">
                    <span><b>Sorry!</b> - @TempData["Error"]</span>
                </div>
            }
        </div>
    </div>
</body>
