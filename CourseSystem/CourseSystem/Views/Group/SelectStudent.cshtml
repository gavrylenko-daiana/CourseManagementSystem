@using Microsoft.AspNetCore.Mvc.TagHelpers
@using X.PagedList.Mvc.Core;
@using X.PagedList;
@using System.Web;
@using BLL.Interfaces
@using BLL.Services
@using X.PagedList.Web.Common;
@model X.PagedList.IPagedList<UI.ViewModels.UserSelectionViewModel>
@inject IUserService UserService

<style>
    body {
        background-color: #f7f7f7;
    }

    .cover-card:hover {
        cursor: pointer;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        border: #4682B4 1px solid;
    }

    .ui.container {
        margin-top: 20px;
    }

    .add-course-button {
        margin-top: 20px;
        text-align: center;
    }
</style>

@if (TempData["Error"] != null)
{
    <div class="col-md-12 alert alert-danger">
        <span>@TempData["Error"]</span>
    </div>
}

<input type="hidden" name="groupId" value="@ViewBag.GroupId"/>
<input type="hidden" name="students" value="@ViewBag.Students">
<div class="ui container mt-4">
    <h3 class="ui header">Invite students:</h3>

    <hr class="ui divider">
    <div class="ui stackable three column grid">
        @if (!Model.Any())
        {
            <div class="column">
                <div class="ui warning message">No students found.</div>
            </div>
        }
        else
        {
            foreach (var userSelection in Model)
            {
                var user = (await UserService.FindByIdAsync(userSelection.Id)).Data;

                <div class="column mt-2">
                    <div class="ui card cover-card">
                        <div class="content">
                            <div class="header" style="display: flex; justify-content: center; align-items: center; flex-direction: column;">
                                @if (user.ProfileImage != null)
                                {
                                    <img src="@user.ProfileImage.Url" alt="@user.ProfileImage.Name" class="rounded-circle img-fluid" style="width: 30px; height: 30px; margin-right: 1px;">
                                }
                                <div>
                                    @user.FirstName @user.LastName
                                </div>
                                <div class="user-button" style="text-align: center;">
                                    <a href="@Url.Action("Detail", "User", new { id = user.Id })" class="ui teal basic button view-profile-button" style="width: 175px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; margin-top: 10px;">Send Invitation</a>
                                </div>
                                @* <div> *@
                                @*     <input type="checkbox" asp-for="@userSelection.IsSelected"/> *@
                                @* </div> *@
                                <input type="hidden" asp-for="@userSelection.Id"/>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    </div>

    @* @if (ViewBag.Approved) *@
    @* { *@
    @*     <a type="submit" class="btn btn-success mt-2" asp-route-students="@Model" asp-route-groupId="@ViewBag.GroupId" asp-action="ApprovedSelection" asp-controller="Group">Submit</a> *@
    @* } *@
    @* else *@
    @* { *@
    @*     <a type="submit" class="btn btn-success mt-2" asp-route-students="@Model" asp-route-groupId="@ViewBag.GroupId" asp-action="ConfirmSelection" asp-controller="Group">Submit</a> *@
    @* } *@
    <div class="ui container add-course-button mt-3" style="display: flex; justify-content: center; align-items: center;">
        @if (Model.PageCount > 1)
        {
            <div class="pagination-container">
                <div style="text-align:center; align-self:center">
                    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
                </div>
                <div>
                    @Html.PagedListPager((IPagedList)Model, page => Url.Action("SelectStudent", new { page = page, sortOrder = ViewBag.CurrentSort, currentQueryFilter = ViewBag.CurrentQueryFilter }),
                        new PagedListRenderOptions
                        {
                            LiElementClasses = new string[] { "page-item" },
                            PageClasses = new string[] { "page-link" },
                            MaximumPageNumbersToDisplay = 3
                        })
                </div>
            </div>
        }
    </div>

    <script>
         document.querySelectorAll('.ui.card').forEach(card => {
             card.addEventListener('click', function () {
                 window.location.href = this.querySelector('.ui.view-profile-button').href;
             });
         });
    </script>
</div>