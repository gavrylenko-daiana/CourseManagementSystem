@model UI.ViewModels.UserGroupsViewModel

<style>
    .group-card {
        transition: box-shadow 0.3s ease;
    }

    .group-card:hover {
        box-shadow: 0 0 8px rgba(0, 0, 0, 0.3);
    }

    .selected-group-card {
        border: 2px solid #ff0000;
    }
</style>

<div class="container mt-4">
    <h3>Groups</h3>
    <hr />

    @if (Model.Groups.Any())
    {
        <div class="row row-cols-2">
            @foreach (var group in Model.Groups)
            {
                <div class="col mb-4">
                    <div class="card group-card">
                        <div class="card-body">
                            <h5 class="card-title">@group.Name</h5>
                            <p>Progress: @group.Progress%</p>
                            <a href="@Url.Action("Details", "Group", new { id = group.Id })" class="btn btn-outline-primary">Details</a>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <p>No groups found for the current user.</p>
    }
</div>
@if (TempData["Error"] != null)
{
    <div class="col-md-12 alert alert-danger">
        <span><b>Sorry!</b> - @TempData["Error"]</span>
    </div>
}  

<script>
    document.querySelectorAll('.group-card').forEach(groupCard => {
        groupCard.addEventListener('click', function () {
            window.location.href = this.querySelector('.btn-outline-primary').href;
        });
    });
</script>
